=begin
#DockGenius API

#No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 0.1.0
Contact: hi@dockgenius.com
Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

require 'spec_helper'
require 'json'

# Unit tests for DockGeniusApiRubyClient::MarinaApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'MarinaApi' do
  before do
    # run before each test
    @instance = DockGeniusApiRubyClient::MarinaApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of MarinaApi' do
    it 'should create an instact of MarinaApi' do
      expect(@instance).to be_instance_of(DockGeniusApiRubyClient::MarinaApi)
    end
  end

  # unit tests for marina_count
  # Count instances of the model matched by where from the data source.
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :where Criteria to match model instances
  # @return [InlineResponse200]
  describe 'marina_count test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for marina_create
  # Create a new instance of the model and persist it into the data source.
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [Marina] :data Model instance data
  # @return [Marina]
  describe 'marina_create test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for marina_create_change_stream_get_marinas_change_stream
  # Create a change stream.
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :options 
  # @return [File]
  describe 'marina_create_change_stream_get_marinas_change_stream test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for marina_create_change_stream_post_marinas_change_stream
  # Create a change stream.
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :options 
  # @return [File]
  describe 'marina_create_change_stream_post_marinas_change_stream test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for marina_delete_by_id
  # Delete a model instance by {{id}} from the data source.
  # 
  # @param id Model id
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'marina_delete_by_id test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for marina_exists_get_marinasid_exists
  # Check whether a model instance exists in the data source.
  # 
  # @param id Model id
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2002]
  describe 'marina_exists_get_marinasid_exists test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for marina_exists_head_marinasid
  # Check whether a model instance exists in the data source.
  # 
  # @param id Model id
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2002]
  describe 'marina_exists_head_marinasid test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for marina_find
  # Find all instances of the model matched by filter from the data source.
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter Filter defining fields, where, include, order, offset, and limit
  # @return [Array<Marina>]
  describe 'marina_find test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for marina_find_by_id
  # Find a model instance by {{id}} from the data source.
  # 
  # @param id Model id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter Filter defining fields and include
  # @return [Marina]
  describe 'marina_find_by_id test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for marina_find_one
  # Find first instance of the model matched by filter from the data source.
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter Filter defining fields, where, include, order, offset, and limit
  # @return [Marina]
  describe 'marina_find_one test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for marina_prototype_count_docks
  # Counts docks of Marina.
  # 
  # @param id PersistedModel id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :where Criteria to match model instances
  # @return [InlineResponse200]
  describe 'marina_prototype_count_docks test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for marina_prototype_create_address
  # Creates a new instance in address of this model.
  # 
  # @param id PersistedModel id
  # @param [Hash] opts the optional parameters
  # @option opts [Address] :data 
  # @return [Address]
  describe 'marina_prototype_create_address test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for marina_prototype_create_docks
  # Creates a new instance in docks of this model.
  # 
  # @param id PersistedModel id
  # @param [Hash] opts the optional parameters
  # @option opts [Dock] :data 
  # @return [Dock]
  describe 'marina_prototype_create_docks test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for marina_prototype_create_listing_agent
  # Creates a new instance in listingAgent of this model.
  # 
  # @param id PersistedModel id
  # @param [Hash] opts the optional parameters
  # @option opts [ListingAgent] :data 
  # @return [ListingAgent]
  describe 'marina_prototype_create_listing_agent test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for marina_prototype_delete_docks
  # Deletes all docks of this model.
  # 
  # @param id PersistedModel id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'marina_prototype_delete_docks test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for marina_prototype_destroy_address
  # Deletes address of this model.
  # 
  # @param id PersistedModel id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'marina_prototype_destroy_address test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for marina_prototype_destroy_by_id_docks
  # Delete a related item by id for docks.
  # 
  # @param fk Foreign key for docks
  # @param id PersistedModel id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'marina_prototype_destroy_by_id_docks test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for marina_prototype_destroy_listing_agent
  # Deletes listingAgent of this model.
  # 
  # @param id PersistedModel id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'marina_prototype_destroy_listing_agent test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for marina_prototype_find_by_id_docks
  # Find a related item by id for docks.
  # 
  # @param fk Foreign key for docks
  # @param id PersistedModel id
  # @param [Hash] opts the optional parameters
  # @return [Dock]
  describe 'marina_prototype_find_by_id_docks test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for marina_prototype_get_address
  # Fetches hasOne relation address.
  # 
  # @param id PersistedModel id
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :refresh 
  # @return [Address]
  describe 'marina_prototype_get_address test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for marina_prototype_get_docks
  # Queries docks of Marina.
  # 
  # @param id PersistedModel id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter 
  # @return [Array<Dock>]
  describe 'marina_prototype_get_docks test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for marina_prototype_get_listing_agent
  # Fetches hasOne relation listingAgent.
  # 
  # @param id PersistedModel id
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :refresh 
  # @return [ListingAgent]
  describe 'marina_prototype_get_listing_agent test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for marina_prototype_update_address
  # Update address of this model.
  # 
  # @param id PersistedModel id
  # @param [Hash] opts the optional parameters
  # @option opts [Address] :data 
  # @return [Address]
  describe 'marina_prototype_update_address test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for marina_prototype_update_attributes_patch_marinasid
  # Patch attributes for a model instance and persist it into the data source.
  # 
  # @param id PersistedModel id
  # @param [Hash] opts the optional parameters
  # @option opts [Marina] :data An object of model property name/value pairs
  # @return [Marina]
  describe 'marina_prototype_update_attributes_patch_marinasid test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for marina_prototype_update_attributes_put_marinasid
  # Patch attributes for a model instance and persist it into the data source.
  # 
  # @param id PersistedModel id
  # @param [Hash] opts the optional parameters
  # @option opts [Marina] :data An object of model property name/value pairs
  # @return [Marina]
  describe 'marina_prototype_update_attributes_put_marinasid test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for marina_prototype_update_by_id_docks
  # Update a related item by id for docks.
  # 
  # @param fk Foreign key for docks
  # @param id PersistedModel id
  # @param [Hash] opts the optional parameters
  # @option opts [Dock] :data 
  # @return [Dock]
  describe 'marina_prototype_update_by_id_docks test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for marina_prototype_update_listing_agent
  # Update listingAgent of this model.
  # 
  # @param id PersistedModel id
  # @param [Hash] opts the optional parameters
  # @option opts [ListingAgent] :data 
  # @return [ListingAgent]
  describe 'marina_prototype_update_listing_agent test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for marina_replace_by_id
  # Replace attributes for a model instance and persist it into the data source.
  # 
  # @param id Model id
  # @param [Hash] opts the optional parameters
  # @option opts [Marina] :data Model instance data
  # @return [Marina]
  describe 'marina_replace_by_id test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for marina_replace_or_create
  # Replace an existing model instance or insert a new one into the data source.
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [Marina] :data Model instance data
  # @return [Marina]
  describe 'marina_replace_or_create test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for marina_update_all
  # Update instances of the model matched by {{where}} from the data source.
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :where Criteria to match model instances
  # @option opts [Marina] :data An object of model property name/value pairs
  # @return [InlineResponse2001]
  describe 'marina_update_all test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for marina_upsert_patch_marinas
  # Patch an existing model instance or insert a new one into the data source.
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [Marina] :data Model instance data
  # @return [Marina]
  describe 'marina_upsert_patch_marinas test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for marina_upsert_put_marinas
  # Patch an existing model instance or insert a new one into the data source.
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [Marina] :data Model instance data
  # @return [Marina]
  describe 'marina_upsert_put_marinas test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for marina_upsert_with_where
  # Update an existing model instance or insert a new one into the data source based on the where criteria.
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :where Criteria to match model instances
  # @option opts [Marina] :data An object of model property name/value pairs
  # @return [Marina]
  describe 'marina_upsert_with_where test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
